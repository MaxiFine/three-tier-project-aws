# Configure AWS provider (ensure you have credentials set up)
provider "aws" {
  region = "us-east-1" # Update with your preferred region
}

# Source Bucket with unique name using prefix
resource "aws_s3_bucket" "source_bucket" {
  bucket_prefix = "mx-source-" # Will generate unique name like "mx-source-20231001"
  force_destroy = true
}

resource "aws_s3_bucket_versioning" "source_versioning" {
  bucket = aws_s3_bucket.source_bucket.id
  versioning_configuration {
    status = "Enabled"
  }
}

resource "aws_s3_bucket_acl" "source_acl" {
  bucket = aws_s3_bucket.source_bucket.id
  acl    = "private"
}

# Destination Bucket with valid name
resource "aws_s3_bucket" "destination_bucket" {
  bucket_prefix = "mx-destination-" # Will generate unique name like "mx-destination-20231001"
  force_destroy = true
}

resource "aws_s3_bucket_versioning" "destination_versioning" {
  bucket = aws_s3_bucket.destination_bucket.id
  versioning_configuration {
    status = "Enabled"
  }
}

resource "aws_s3_bucket_acl" "destination_acl" {
  bucket = aws_s3_bucket.destination_bucket.id
  acl    = "private"
}

# IAM Role for Replication
resource "aws_iam_role" "replication_role" {
  name = "s3-replication-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Action = "sts:AssumeRole"
      Effect = "Allow"
      Principal = {
        Service = "s3.amazonaws.com"
      }
    }]
  })
}

resource "aws_iam_policy" "replication_policy" {
  name        = "s3-replication-policy"
  description = "Allows S3 to replicate objects"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:GetObject",
          "s3:ListBucket",
          "s3:ReplicateObject",
          "s3:ReplicateDelete",
          "s3:ReplicateTags"
        ]
        Effect   = "Allow"
        Resource = [
          "${aws_s3_bucket.source_bucket.arn}/*",
          aws_s3_bucket.source_bucket.arn
        ]
      },
      {
        Action   = "s3:PutObject"
        Effect   = "Allow"
        Resource = "${aws_s3_bucket.destination_bucket.arn}/*"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "replication_role_attachment" {
  role       = aws_iam_role.replication_role.name
  policy_arn = aws_iam_policy.replication_policy.arn
}

# Replication Configuration
resource "aws_s3_bucket_replication_configuration" "replication_config" {
  depends_on = [aws_s3_bucket_versioning.source_versioning]

  bucket = aws_s3_bucket.source_bucket.id
  role   = aws_iam_role.replication_role.arn

  rule {
    id     = "ReplicationRule1"
    status = "Enabled"

    filter {
      prefix = ""
    }

    destination {
      bucket        = aws_s3_bucket.destination_bucket.arn
      storage_class = "STANDARD"
    }
  }
}
